syntax = "proto3";

package order;
option go_package = ".;order";

service Order {
  rpc AddOrder(AddOrderRequest) returns (AddOrderResponse); // TODO: 创建订单
  rpc PayCallback(PayCallbackRequest) returns (PayCallbackResponse); // TODO: 支付回调
  rpc OrderList(OrderListRequest) returns (OrderListResponse); // TODO: 订单列表查询
}

// TODO:创建订单
message AddOrderRequest {
  int64  Uid = 1; // 用户ID
  int64  ProductId = 2; // 商品ID/秒杀商品ID
  int64  Num = 3; // 购买数量
  int64  PayType = 4; // 支付方式
  int64  CouponId = 5; // 优惠券ID
  string Mark = 6; // 备注
  int64  StoreId = 7; // 门店ID
  int64  MerId = 8; // 商户ID
  int64  BargainId = 9; // 砍价ID
  int64  ShippingType = 10; // 配送方式 1=快递 ，2=门店自提
  int64  IsChannel = 11; // 支付渠道
  int64  PinkId = 12; // 拼团ID
  string ProductSpecifications = 13; // 商品属性
  int64  Source = 14; // 来源（1.普通商品，2秒杀商品）
}

message AddOrderResponse {
  string PayUrl = 1;
}

// TODO:支付回调
message PayCallbackRequest {
  string OrderSn = 1;
  string Status = 2;
  float BuyerPayAmount=3;
}

message PayCallbackResponse {
  bool  Success = 1;
}

// TODO:订单列表查询
message OrderListRequest {
  int64  UserId = 1;
  int64  OrderStatus = 2;
}

message OrderListResponse {
  repeated  OrderList List = 1;
}

message OrderList {
  int64  OrderId = 1;
  string OrderSn = 2;
  int64  ProductId = 3;
  string ProductName = 4;
  string ProductImage = 5;
  string ProductSpecifications = 6;
  int64  UserId = 7;
  string Account = 8;
  string UserPhone = 9;
  float  PayPrice = 10;
  int64  PayType = 11;
  string PayTime = 12;
  int64  Paid = 13;
  int64  Status = 14;
}

